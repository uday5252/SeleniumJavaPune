// Rest Operator

// function collect(...a)
// {
//     console.log(a)
// }

// collect(10, 20, 30, 40, 50)


// Spread Operator

// function collect(a, b, c, d)
// {
//     console.log(a, b, c, d)
// }

// collect(...[10, 20, 30, 40])


// const data = [10, 20, 30, 40, 50]

// const firstEle = data[0]
// const secondEle = data[1]
// const thirdEle = data[2]
// const fourthEle = data[3]
// const fifthEle = data[4]

// console.log(firstEle, secondEle, thirdEle, fourthEle, fifthEle);

// Array Destructuring(separating)

// const data = [10, 20, 30, 40, 50]
// const [a, b, c, d, e] = data
// console.log(c)


// const data = [10, 20, 30, 40, 50]
// const [a, b, , , c] = data
// console.log(c)


// const data = [10, 20, 30, 40, 50]
// const [ , b, a, ...info ] = data
// console.log(a)
// console.log(b)
// console.log(info)


// const data = [10, 20, 30, 40, 50, 60]
// const [ a, ...info, b ] = data
// console.log(a) 
// console.log(b)
// console.log(info)

// const arr1 = [10, 20, 30]
// const arr2 = [40, 50, 60]

// const arr3 = [ ...arr1, ...arr2 ]
// console.log(arr3)

// Object Destructuring

// const person = {
//     name: "Raju",
//     age: 40,
//     city: "Bangalore"
// }

// const { name, age, city } = person
// console.log(name, age, city)



class Employee
{

    constructor(name, age, city)
    {
        this.name = name
        this.age = age
        this.city = city
    }

    displayDetails()
    {
        console.log(`The name of the employee is ${this.name}, age is ${this.age} and city is ${this.city}`);
    }
}


// 3 objects
const employee1 = new Employee("Raju", 30, "Mumbai")
const employee2 = new Employee("Mary", 28, "Chennai")
const employee3 = new Employee("John", 35, "Bangalore")

employee1.displayDetails()
employee2.displayDetails()
employee3.displayDetails()

// Encapsulation
// providing security to the most important component of the object

class BankAccount
{
    accountHolderName
    accountNumber
    #balance // private property

    constructor(accountNumber, accountHolderName, balance)
    {
        this.accountNumber = accountNumber
        this.accountHolderName = accountHolderName
        this.#balance = balance // private property
    }

    setBalance(newBalance)
    {
        if(newBalance > 0)
        {
            this.#balance = this.#balance +  newBalance
        }
    }

    getBalance()
    {
        return this.#balance
    }
}

const account = new BankAccount("1234567890", "Raju", 5000)
account.setBalance(-100000)
console.log(account.getBalance())



// Method Overiding 
// If the child class is not happy with the content of the parent class method
// then the child class can provide its own implementation / logic of the parent class method

class Demo
{
    display()
    {
        console.log("Hello from Demo class display method");
    }
}

class Launch extends Demo
{
    display()
    {
        console.log("Hello from Launch class display method");
    }
}

const l = new Launch()
l.display()
